class Solution:
    def helper(self,root,su,le):
        if root is None:
            return 
        le[0] += root.data
        le[1] += 1
        if root.left is None and root.right is None:
            if su[1] < le[1]:
                su[0] = le[0]
                su[1] = le[1]
            elif su[1] == le[1]:
                su[0] = max(su[0],le[0])
                su[1] = le[1]
        self.helper(root.left,su,le)
        self.helper(root.right,su,le)
        le[0] -= root.data
        le[1] -= 1
    
    def sumOfLongRootToLeafPath(self,root):
        #code here
        su = [0,0]
        le = [0,0]
        self.helper(root,su,le)
        return su[0]