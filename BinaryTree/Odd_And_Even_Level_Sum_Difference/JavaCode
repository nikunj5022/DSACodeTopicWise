class Solution
{
    int getLevelDiff(Node root) {
        Queue<Node> queue = new LinkedList<>();
        queue.add(root);
        
        int oddSum = 0;
        int evenSum = 0;
        int level = 1;
        oddSum += root.data;
        
        while (!queue.isEmpty()) {
            int temp = 0;
            int lenQ = queue.size();
            
            for (int i = 0; i < lenQ; i++) {
                Node curr = queue.poll();
                
                if (curr.left != null) {
                    queue.add(curr.left);
                    temp += curr.left.data;
                }
                
                if (curr.right != null) {
                    queue.add(curr.right);
                    temp += curr.right.data;
                }
            }
            
            if (!queue.isEmpty()) {
                level++;
                if (level % 2 == 0) {
                    evenSum += temp;
                } else {
                    oddSum += temp;
                }
            }
        }
        
        return oddSum - evenSum;
    }
}