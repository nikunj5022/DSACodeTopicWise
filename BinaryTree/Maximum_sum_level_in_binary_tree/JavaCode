class Solution {
    public int maxLevelSum(TreeNode root) {
        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);

        int maxLevel = 1;
        int maxSum = root.val;
        int level = 1;

        while (!queue.isEmpty()) {
            int tempSum = 0;
            int levelLen = queue.size();
            level++;

            for (int i = 0; i < levelLen; i++) {
                TreeNode curr = queue.poll();

                if (curr.left != null) {
                    tempSum += curr.left.val;
                    queue.add(curr.left);
                }
                if (curr.right != null) {
                    tempSum += curr.right.val;
                    queue.add(curr.right);
                }
            }

            if (!queue.isEmpty()) {
                if (tempSum > maxSum) {
                    maxSum = tempSum;
                    maxLevel = level;
                }
            }
        }

        return maxLevel;
    }
}